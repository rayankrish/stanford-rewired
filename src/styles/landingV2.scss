@use 'variables' as *;
@use 'mixins' as *;

#landing-title {
  font: 700 $base*1.5/1 $serif;
  text-align: left;

  @media screen and (min-width: $breakpoint) {
    font-size: $base*2.5;
  }
}

#issue-subtitle {
  font: $base*9/6 $sans;
  text-align: center;
  text-transform: uppercase;

  @media screen and (min-width: $breakpoint) {
    font-size: 29px;
  }
}

#landing-description {
  font: $base*9/6 $sans;
  text-align: left;

  @media screen and (min-width: $breakpoint){
    font-size: $base*7/5
  }
}

#article-title {
  font: 24px $serif;
}

#article-description {
  font: 20px $sans;
  line-height: 140%;
  padding-top: 5px;
}

.landing-article-excerpt {
  font-family: Source Sans Pro;
  font-style: normal;
  font-weight: normal;
  font-size: 20px;
  line-height: 140%;
  /* or 28px */

  /* Black */
  color: #434343;
  text-overflow: ellipsis;
}

#tag {
  display: inline-block;
  font-size: 16px;
  border-style: solid;
  border-width: 1px;
  border-color: $text;
  border-radius: 20px;
  align-items: flex-end;
  text-align: center;
  font-variant: small-caps;
  padding-bottom: 0px;
  padding-left: 10px;
  padding-right: 10px;
  margin-right: 10px;
}

#landing-image {
  width: 300px;
  height: 300px;
  object-fit: cover;
  display: block;
  margin-left: 0px;
  margin-right: auto;
}

#landing-article-thumbnail {
  width: 100px;
  height: 100px;
  object-fit: cover;
}

.columns {
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  margin-bottom: $base/4;

  @media screen and (min-width: $breakpoint) {
    flex-flow: row nowrap;
  }
}

.center{
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.landing-col-a {
  width: 100px;
  height:100px;
  margin-bottom: 0;

  @media screen and (min-width: $breakpoint) {
    width: 100px;
    height: 100px;
  }
}

.landing-col-b {
  width: 100%;
  margin-bottom: 0;
  padding-left: 20px;
  padding-right: 20px;

  @media screen and (min-width: $breakpoint) {
    width: 500px;
    height: 100px;
    overflow: hidden;
  }
}

p a {
  text-decoration: underline;
}

#graphics {
  position: absolute;
  z-index: -1;
  width: 100%;
  height: 100%;

  .svgContainer {
    position: absolute;
    transform: scale(.4);

    circle {
      fill: $poppy-red;
    }

    @media screen and (min-width: $breakpoint) {
      transform: scale(.7);
    }

    @media screen and (min-width: 1200px) {
      transform: scale(1);
    }
  }
}

#group1 {
  @include graphics(left, -170px, -212px, -270px);
  @include graphics(top, -220px, -100px, 10px);
}

#group6 {
  @include graphics(left, 606px, 606px, 205px);
  @include graphics(top, 10px, 10px, 0px);
}

#group7 {
  @include graphics(left, 606px, 606px, 0px);
  @include graphics(top, 10px, 10px, 1211px);
}

#group5 {
  @include graphics(right, -130px, -170px, -20vw);
  @include graphics(bottom, -300px, -80px, 0px);
}

@keyframes dash {
  to {
    stroke-dashoffset: 0;
  }
}


@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY($base);
  } to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fadeInUp {
  animation: fadeInUp 0.5s ease-in-out forwards;
}

.draw {
  animation: dash 1.4s linear forwards;
}

// react-animate-on-scroll adds an extra div around
// elements, this removes the extra styling from that.
.animated {
  margin: 0;
}
