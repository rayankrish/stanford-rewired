@use 'variables' as *;
@use 'mixins' as *;

#team {
  display: flex;
  flex-flow: row wrap;
  @include responsive-sizing(font-size, $base/1.25);
  text-align: center;

  h3 {
    font-family: $sans;
    font-weight: 700;
    @include responsive-sizing(font-size, $base/1.25);
    @include responsive-sizing(margin-bottom, $base/4);
  }

  .member {
    flex-basis: 50%;
    @media screen and (min-width: 540px) {
      flex-basis: 33%;
    }
    @media screen and (min-width: 740px) {
      flex-basis: 25%;
    }

    @include responsive-sizing(margin-bottom, $base*1.25);

    img {
      object-fit: cover;
      border-radius: 50%;
      border: 3px solid black;
      width: 100px;
      height: 100px;
      @include responsive-sizing(margin-bottom, $base/2);
    }
  }
}

.columns {
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  margin-bottom: $base/2;

  @media screen and (min-width: $breakpoint) {
    flex-flow: row nowrap;
  }
}

.col {
  width: 100%;
  margin-bottom: 0;

  @media screen and (min-width: $breakpoint) {
    width: 276px;
  }
}

p a {
  text-decoration: underline;
}

form {
  padding-bottom: $base*3;

  input[type=text] {
    background-color: $background;
    border: 2px solid $text;
    margin-top: 12px;
    color: $text;
    width: 100%;
    @include responsive-sizing(padding, $base/2);

    &:focus {
      outline: 0;
    }

    @media screen and (min-width: $breakpoint) {
      width: 408px;
    }
  }

  a[type=warning] {
    color: $poppy-red;
    font-style: italic;
  }

  input[type=submit] {
    display: block;
    background-color: $text;
    border: 0;
    border-radius: $base/2;
    color: $background;
    font: 700 $base/1 $sans;
    text-transform: uppercase;
    margin-top: $base*2/3;
    padding: $base*2/3 $base*2;
    box-shadow: none;

    &:hover {
      cursor: pointer;
    }

    @media screen and (min-width: $breakpoint) {
      font-size: $base*$device-scaling;
      padding: $base $base*3;
    }
  }
}

#about-graphics {
  position: absolute;
  z-index: -1;
  width: 100%;
  height: 100%;

  .svgContainer {
    position: absolute;
    transform: scale(.4);

    line, path {
      stroke: $poppy-red;
    }

    line {
      stroke-width: 3;
    }

    path {
      stroke-width: 6;
      stroke-linecap: round;
    }

    @media screen and (min-width: $breakpoint) {
      transform: scale(.7);
    }

    @media screen and (min-width: 1200px) {
      transform: scale(1);
    }
  }
}

#group1 {
  @include graphics(left, -170px, -212px, -270px);
  @include graphics(top, -220px, -100px, 10px);
}

#group2 {
  @include graphics(right, -50px, -124px, -15vw);
  @include graphics(top, 100px, 100px, 100px);
}

#group3 {
  @include graphics(right, -50px, -124px, -15vw);
  @include graphics(top, 840px, 640px, 800px);
}

#group4 {
  @include graphics(left, -60px, -80px, -10vw);
  @include graphics(bottom, 750px, 770px, 765px);
}

#group5 {
  @include graphics(right, -130px, -170px, -20vw);
  @include graphics(bottom, -300px, -80px, 0px);
}

@keyframes dash {
  to {
    stroke-dashoffset: 0;
  }
}


@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY($base);
  } to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fadeInUp {
  animation: fadeInUp 0.5s ease-in-out forwards;
}

.draw {
  animation: dash 1.4s linear forwards;
}

// react-animate-on-scroll adds an extra div around
// elements, this removes the extra styling from that.
.animated {
  margin: 0;
}
