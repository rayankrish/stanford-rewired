@use 'variables' as *;
@use 'mixins' as *;

#issue-title {
  @extend .serif-header;
  text-align: center;
}

#issue-subtitle {
  @extend .sans-serif-caps;
  text-align: center;
  text-transform: uppercase;
}

#description {
  @extend .body;
  text-align: center;
}

#article-title {
  @extend .serif-header-2;
  margin-bottom: 0px;
}

#article-description {
  @extend .body;
  padding-top: 5px;
}

#tag {
  @extend .sans-serif-label;
  display: inline-block;
  border-style: solid;
  border-width: 1px;
  border-color: $text;
  border-radius: 20px;
  align-items: flex-end;
  text-align: center;
  padding-bottom: 0px;
  padding-left: 10px;
  padding-right: 10px;
  margin-right: 10px;
  vertical-align: middle;
}

.footer-links {
  @extend .sans-serif-caps;
  padding-bottom: 0px;
  margin-bottom: 0px;
  text-align: center;
}

#issue-image {
  width: 600px;
  height: 300px;
  display: block;
  margin-left: auto;
  margin-right: auto;
}

#article-thumbnail {
  width: 200px;
  height: 200px;
  object-fit: cover;
}

.columns {
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  margin-bottom: $base/2;

  @media screen and (min-width: $breakpoint) {
    flex-flow: row nowrap;
  }
}

.center{
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.col-a {
  width: 200px;
  height:200px;
  margin-bottom: 0;

  @media screen and (min-width: $breakpoint) {
    width: 200px;
    height: 200px;
  }
}

.col-b {
  width: 100%;
  margin-bottom: 0;
  padding-left: 20px;
  padding-right: 20px;

  @media screen and (min-width: $breakpoint) {
    width: 400px;
    height: 200px;
    overflow: hidden;
  }
}

p a {
  text-decoration: underline;
}

#graphics {
  position: absolute;
  z-index: -1;
  width: 100%;
  height: 100%;

  .svgContainer {
    position: absolute;
    transform: scale(.4);

    circle {
      fill: $poppy-red;
    }

    @media screen and (min-width: $breakpoint) {
      transform: scale(.7);
    }

    @media screen and (min-width: 1200px) {
      transform: scale(1);
    }
  }
}

#dots1,
#dots3,
#dots4 {
  circle {
    fill-opacity: 0.3;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY($base);
  } to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fadeInUp {
  animation: fadeInUp 0.5s ease-in-out forwards;
}

.draw {
  animation: dash 1.4s linear forwards;
}

// react-animate-on-scroll adds an extra div around
// elements, this removes the extra styling from that.
.animated {
  margin: 0;
}
